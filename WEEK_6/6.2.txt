
useEffect
useCallback
useMemo,

Custom hooks 
Provided Hooks 
Prop Drilling 


1. Side Effects : any operation that reach outside the functional scope of a react component. These operations
can affect other components, interact with browser, or perform asynchronus data fetching 
2. Hooks : In react 16.8. Allow you to use state and other features 
without writing a class. Allow stateful logic and lifecycle features component has mounted and etc. 
 
 Common Hooks :- useState, useEffect, useCallback, useMemo, useRef, useContext


 useState: Lets you descriibe the state of your app ,whenever state updates triggers re render 
 which finally results in a DOM updates.

 useEffect:  allows you to perform side effects operations which can affect other components 
 eg data fetching , subscriptions manually changing dom in reaCT COMPONENTS.
 useEffect hook serves the same purpose as componentDidMount componenDidUpdate, and componentWillUnmoint 
 in react class components but unified in a single api i.e 3 in one


 completed till 19;00
 

 [] state variable is taken this is where we add the dependancy



 useMemo:-

 memoization: - means remembering some output given an input and not computing it again 
 real world: - you are driver and you want to check petrol would you do that in every lap,every 10 laps or 20 mins 

 completed till 1:15:00